# Common Labels
labels:
  app: "order"
  group: "backend"

# Ingress Configs
ingress:
  zuul: true
  enabled: true
  context: "order"


# Init Containers Configs
initContainers:
  dbMigration:
    enabled: true
    schemaTable: "order_service_schema"
    image:
      repository: "pucardev.azurecr.io/pucar_order_db"
      tag: v1.0.0-a17c3d0525b36a22de876afe53f9d0cafb9e0365

# Container Configs
image:
  repository: "pucardev.azurecr.io/pucar_order"
  tag: v1.0.0-a17c3d0525b36a22de876afe53f9d0cafb9e0365
  imagePullPolicy: Always
replicas: "1"
httpPort: 8080
appType: "java-spring"
heap: "-Xmx64m -Xms64m"
java-args: "-Dspring.profiles.active=monitoring"
memory_requests: 256Mi



#healthChecks:
#  enabled: true
#  livenessProbePath: "/order/"
#  readinessProbePath: "/order/"

env: |
  - name: SPRING_FLYWAY_URL
    valueFrom:
      configMapKeyRef:
        key: db-url
        name: egov-config
  - name: SPRING_FLYWAY_USER
    valueFrom:
      secretKeyRef:
        key: username
        name: db
  - name: SPRING_FLYWAY_PASSWORD
    valueFrom:
      secretKeyRef:
        name: db
        key: password
  - name: SPRING_DATASOURCE_URL
    valueFrom:
      configMapKeyRef:
        name: egov-config
        key: db-url
  - name: SPRING_DATASOURCE_USERNAME
    valueFrom:
      secretKeyRef:
        name: db
        key: username
  - name: SPRING_DATASOURCE_PASSWORD
    valueFrom:
      secretKeyRef:
        name: db
        key: password
  - name: "SCHEMA_TABLE"
    value: "order_service_schema"
  - name: EGOV_IDGEN_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: egov-idgen
  - name: EGOV_USER_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: egov-user
  - name: EGOV_HRMS_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: egov-hrms
  - name: EGOV_MDMS_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: egov-mdms-service
  - name: EGOV_MDMS_SEARCH_ENDPOINT
    value: /egov-mdms-service/v1/_search
  - name: EGOV_LOCALIZATION_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: egov-localization
  - name: EGOV_LOCALIZATION_SEARCH_ENDPOINT
    value: /localization/messages/v1/_search
  - name: SERVER_PORT
    value: "8080"
  - name: SERVER_CONTEXT_PATH
    value: /order
  - name: EGOV_IDGEN_PATH
    value: "egov-idgen/id/_generate"
  - name: EGOV_INDIVIDUAL_HOST
    valueFrom:
      configMapKeyRef:
        key: individual
        name: egov-service-host
  - name: EGOV_WORKFLOW_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: egov-workflow-v2
  - name: KAFKA_CONFIG_BOOTSTRAP_SERVER_CONFIG
    valueFrom:
      configMapKeyRef:
        key: kafka-brokers
        name: egov-config
  - name: EGOV_URL_SHORTNER
    valueFrom:
      configMapKeyRef:
        key: egov-url-shortening
        name: egov-service-host
  - name: EGOV_FILESTORE_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: egov-filestore
  - name: EGOV_ADVOCATE_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: advocate
  - name: EGOV_CASE_HOST
    valueFrom:
      configMapKeyRef:
        name: egov-service-host
        key: case
  - name: EGOV_CASE_PATH
    value: case/case/v1/_exists
    
